#docker-compose.yml (Extended config for DEVELOPMENT env.)

version: '3.7'
services:
  front_angular:
    image: smart_house_front_angular:latest
    build:
      context: ./Web/SmartHouseWebAngular
      dockerfile: Dockerfile
    entrypoint: ["ng", "serve", "--host", "0.0.0.0"]
    networks:
      - smart-house-network
    ports:
        - ${EXTERNAL_FRONT_ANGULAR_PORT}:${INTERNAL_FRONT_ANGULAR_PORT}
    depends_on:
        - api
  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - FrontUrlsCors=${FRONT_CORS_URLS}
      - MongoDbLoggerConnection:Connection=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:${INTERNAL_MONGO_PORT}
      - ConnectionStrings:DefaultConnection=Host=postgres;Port=${INTERNAL_POSTGRES_PORT};Database=${POSTGRES_DATABASE};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};
      - OpenWeatherMapService:url=http://weather-api-service-nodejs:${INTERNAL_WEATHER_API_NODEJS}
    networks:
      - smart-house-network
    ports:
      - ${EXTERNAL_API_PORT}:${INTERNAL_API_PORT}
    depends_on: 
      - mongo
      - postgres
      - weather-api-service-nodejs
  mongo:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
        - smart-house-network
    ports:
        - ${EXTERNAL_MONGO_PORT}:${INTERNAL_MONGO_PORT}
  redis:
    image: redis:latest
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: always
    environment:
      MONGO_INITDB_ROOT_PASSWORD: ${REDIS_PASSWORD}
    networks:
        - smart-house-network
    ports:
        - ${EXTERNAL_REDIS_PORT}:${INTERNAL_REDIS_PORT}
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
        - smart-house-network
    ports:
        - ${EXTERNAL_POSTGRESS_PORT}:${INTERNAL_POSTGRES_PORT}
    volumes:
      - database_data:/var/lib/postgresql/data
  weather-api-service-nodejs:
    build:
      context: ./Other/WetherApiNodejs/
      dockerfile: Dockerfile
    networks:
      - smart-house-network
    ports:
      - ${EXTERNAL_WEATHER_API_NODEJS}:${INTERNAL_WEATHER_API_NODEJS}
volumes:
  database_data:
    driver: local
networks:
  smart-house-network:
    driver: bridge
